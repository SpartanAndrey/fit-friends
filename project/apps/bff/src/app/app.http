@baseUrl = http://localhost:4000/api
@accessToken = {{login.response.body.$.accessToken}}
@refreshToken = {{login.response.body.$.refreshToken}}
@userId = {{newUser.response.body.$.id}}
@requestId = {{newRequest.response.body.$.id}}
@workoutId = {{workout.response.body.$.id}}

#------Users------
# Create a new user coach
# @name newUser
POST {{baseUrl}}/users/register HTTP/1.1
Content-Type: application/json 

{
  "name": "Spartan Spartanych",
  "email": "spart@gmail.com",
  "password": "123456",
  "role": "Coach",
  "dateBirth": "1998-02-22",
  "gender": "Male",
  "location": "Udelnaya",
  "level": "Amateur",
  "workoutType": "Boxing",
  "certificate": "certificate1.pdf",
  "isReadyToCoach": true
}

###

# Create a new user simple
# @name newUser
POST {{baseUrl}}/users/register HTTP/1.1
Content-Type: application/json 

{
  "name": "Dinam Dynamich",
  "email": "din@gmail.com",
  "password": "123456",
  "role": "User",
  "dateBirth": "2000-02-22",
  "gender": "Male",
  "location": "Udelnaya",
  "level": "Beginner",
  "workoutType": "Yoga",
  "workoutTime": "10-30 min",
  "caloriesToBurnNumber": 1000,
  "caloriesToSpendNumber": 2000,
  "isReadyToTrain": true
}

###

# Login user by email and password
# @name login
POST {{baseUrl}}/users/login HTTP/1.1
Content-Type: application/json

{
  "email": "spart@gmail.com",
  "password": "123456"
}

###

# Get user by ID
GET {{baseUrl}}/users/{{userId}} HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get users
GET {{baseUrl}}/users?level=Amateur&location=Udelnaya HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get new JWT pair
POST {{baseUrl}}/users/refresh HTTP/1.1
Authorization: Bearer {{refreshToken}}

###

# Update user data
PATCH {{baseUrl}}/users/{{userId}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "Sparta Spartakovich"
}

###

# Add friend
PATCH {{baseUrl}}/users/{{userId}}/friends/add HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "friendId": "64b8198731af018aaa0b5801"
}

###

# Remove friend
PATCH {{baseUrl}}/users/{{userId}}/friends/remove HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "friendId": "4b828a4ba286243480cdba0"
}

###

# Add workouts to user balance
PATCH {{baseUrl}}/users/{{userId}}/balance/add HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "workoutId": 1,
  "workoutNumber": 5
}

###

# Subtract workout to user balance
PATCH {{baseUrl}}/users/{{userId}}/balance/sub HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "workoutId": 1
}

###

# Delete notifications
PATCH {{baseUrl}}/users/{{userId}}/notification HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "notification text": " "
}

###

#------Requests------
# Create a new request for workout
# @name newRequest
POST {{baseUrl}}/requests/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "userId": "64a1651fd8f9a13dee6aec19"
}

###

# Update request for workout
PATCH  {{baseUrl}}/requests/{{requestId}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "status": "Accepted"
}

###

# Get request for workout by Id
GET {{baseUrl}}/requests/{{requestId}} HTTP/1.1
Authorization: Bearer {{accessToken}}

###

#------Workouts------
# Create a new workout
# @name workout
POST {{baseUrl}}/workouts/create HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "Run, Forrest!",
  "backgroundImage": "training-2.png",
  "description": "Узнайте правильную технику бега, развивайте выносливость и откройте для себя все секреты длительных пробежек.",
  "level": "Professional",
  "type": "Running",
  "time": "80-100 min",
  "gender": "Men",
  "price": 1600,
  "caloriesNumber": 1500,
  "demonstration": "crossfit.mp4",
  "specialOffer": false
}

###

# Get workout by ID
GET {{baseUrl}}/workouts/7 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Update workout
PATCH {{baseUrl}}/workouts/{{workoutId}} HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "caloriesNumber": 2000
}

###

# Get workouts
GET {{baseUrl}}/workouts?sortDirection=desc&limit=5&page=1 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

# Get coach workouts
GET {{baseUrl}}/workouts/coach/F123?sortDirection=desc&limit=2&page=1 HTTP/1.1
Authorization: Bearer {{accessToken}}

###

#-------Orders------
# Create order
POST {{baseUrl}}/orders HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "workoutId": 2,
  "orderType": "Membership",
  "workoutPrice": 1000,
  "quantity": 5,
  "paymentType": "Visa"
}

###

# Get coach orders
GET {{baseUrl}}/orders/coach/F123?quantitySortDirection=desc HTTP/1.1
Authorization: Bearer {{accessToken}}

###

#-------Reviews------
# Create review
POST {{baseUrl}}/reviews HTTP/1.1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "workoutId": 2,
  "rating": 5,
  "text": "Невероятная тренировка, раньше я не умел махать руками и ногами, а теперь в этом деле я профи."
}

###

# Get reviews
GET {{baseUrl}}/reviews/2 HTTP/1.1
Authorization: Bearer {{accessToken}}

###